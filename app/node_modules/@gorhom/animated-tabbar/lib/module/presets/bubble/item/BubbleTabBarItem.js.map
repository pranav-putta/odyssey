{"version":3,"sources":["BubbleTabBarItem.tsx"],"names":["React","useMemo","memo","View","Text","Animated","interpolateColor","useValue","isEqual","DEFAULT_ITEM_INNER_SPACE","DEFAULT_ITEM_OUTER_SPACE","styles","add","interpolate","BubbleTabBarItemComponent","animatedFocus","label","icon","background","labelStyle","labelStyleOverride","itemInnerSpace","itemOuterSpace","iconSize","isRTL","itemInnerVerticalSpace","itemInnerHorizontalSpace","itemOuterVerticalSpace","itemOuterHorizontalSpace","_itemInnerVerticalSpace","_itemInnerHorizontalSpace","_itemOuterVerticalSpace","_itemOuterHorizontalSpace","vertical","horizontal","labelWidth","minWidth","maxWidth","animatedIconColor","inputRange","outputRange","inactiveColor","activeColor","containerStyle","container","paddingHorizontal","paddingVertical","width","contentContainerStyle","contentContainer","flexDirection","borderRadius","backgroundColor","labelContainerStyle","labelContainer","opacity","iconContainerStyle","iconContainer","minHeight","handleTextLayout","nativeEvent","layout","requestAnimationFrame","setValue","renderIcon","IconComponent","component","color","size","BubbleTabBarItem"],"mappings":"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","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { View, Text, LayoutChangeEvent } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { interpolateColor, useValue } from 'react-native-redash';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport {\n  DEFAULT_ITEM_INNER_SPACE,\n  DEFAULT_ITEM_OUTER_SPACE,\n} from '../constants';\nimport type { BubbleTabBarItemProps } from '../types';\nimport { styles } from './styles';\n\nconst { add, interpolate } = Animated;\n\nconst BubbleTabBarItemComponent = ({\n  animatedFocus,\n  label,\n  icon,\n  background,\n  labelStyle: labelStyleOverride,\n  itemInnerSpace,\n  itemOuterSpace,\n  iconSize,\n  isRTL,\n}: BubbleTabBarItemProps) => {\n  //#region extract props\n  const {\n    itemInnerVerticalSpace,\n    itemInnerHorizontalSpace,\n    itemOuterVerticalSpace,\n    itemOuterHorizontalSpace,\n  } = useMemo(() => {\n    let _itemInnerVerticalSpace,\n      _itemInnerHorizontalSpace,\n      _itemOuterVerticalSpace,\n      _itemOuterHorizontalSpace = 0;\n\n    if (typeof itemInnerSpace === 'number') {\n      _itemInnerVerticalSpace = itemInnerSpace;\n      _itemInnerHorizontalSpace = itemInnerSpace;\n    } else {\n      _itemInnerVerticalSpace =\n        itemInnerSpace?.vertical ?? DEFAULT_ITEM_INNER_SPACE;\n      _itemInnerHorizontalSpace =\n        itemInnerSpace?.horizontal ?? DEFAULT_ITEM_INNER_SPACE;\n    }\n    if (typeof itemOuterSpace === 'number') {\n      _itemOuterVerticalSpace = itemOuterSpace;\n      _itemOuterHorizontalSpace = itemOuterSpace;\n    } else {\n      _itemOuterVerticalSpace =\n        itemOuterSpace?.vertical ?? DEFAULT_ITEM_OUTER_SPACE;\n      _itemOuterHorizontalSpace =\n        itemOuterSpace?.horizontal ?? DEFAULT_ITEM_OUTER_SPACE;\n    }\n    return {\n      itemInnerVerticalSpace: _itemInnerVerticalSpace,\n      itemInnerHorizontalSpace: _itemInnerHorizontalSpace,\n      itemOuterVerticalSpace: _itemOuterVerticalSpace,\n      itemOuterHorizontalSpace: _itemOuterHorizontalSpace,\n    };\n  }, [itemInnerSpace, itemOuterSpace]);\n  //#endregion\n\n  //#region variables\n  const labelWidth = useValue<number>(0);\n  /**\n   * @DEV\n   * min width is calculated by adding outer & inner spaces\n   * with the icon size.\n   */\n  const minWidth = useMemo(() => {\n    return (\n      itemInnerHorizontalSpace * 2 + iconSize + itemOuterHorizontalSpace * 2\n    );\n  }, [itemInnerHorizontalSpace, itemOuterHorizontalSpace, iconSize]);\n  /**\n   * @DEV\n   * max width is calculated by adding inner space with label width\n   */\n  const maxWidth = add(labelWidth, itemInnerHorizontalSpace, minWidth);\n  //#endregion\n\n  //#region styles\n  const animatedIconColor = interpolateColor(animatedFocus, {\n    inputRange: [0, 1],\n    outputRange: [icon.inactiveColor, icon.activeColor],\n  });\n  const containerStyle = [\n    styles.container,\n    {\n      paddingHorizontal: itemOuterHorizontalSpace,\n      paddingVertical: itemOuterVerticalSpace,\n      width: interpolate(animatedFocus, {\n        inputRange: [0, 1],\n        outputRange: [minWidth, maxWidth],\n      }),\n    },\n  ];\n  const contentContainerStyle = [\n    styles.contentContainer,\n    {\n      flexDirection: isRTL ? 'row-reverse' : 'row',\n      paddingHorizontal: itemInnerHorizontalSpace,\n      paddingVertical: itemInnerVerticalSpace,\n      borderRadius: itemInnerVerticalSpace * 2 + iconSize,\n      backgroundColor: interpolateColor(animatedFocus, {\n        inputRange: [0, 1],\n        outputRange: [background.inactiveColor, background.activeColor],\n      }),\n    },\n  ];\n  const labelContainerStyle = [\n    styles.labelContainer,\n    {\n      opacity: interpolate(animatedFocus, {\n        inputRange: [0.33, 1],\n        outputRange: [0, 1],\n      }),\n      [isRTL ? 'left' : 'right']: interpolate(animatedFocus, {\n        inputRange: [0, 1],\n        outputRange: [0, itemInnerHorizontalSpace + itemOuterHorizontalSpace],\n      }),\n    },\n  ];\n  const iconContainerStyle = [\n    styles.iconContainer,\n    {\n      minHeight: iconSize,\n      minWidth: iconSize,\n    },\n  ];\n  const labelStyle = [styles.label, labelStyleOverride];\n  //#endregion\n\n  // callbacks\n  const handleTextLayout = ({\n    nativeEvent: {\n      layout: { width },\n    },\n  }: LayoutChangeEvent) =>\n    requestAnimationFrame(() => labelWidth.setValue(width));\n\n  // render\n  const renderIcon = () => {\n    const IconComponent: any = icon.component;\n    return typeof IconComponent === 'function' ? (\n      IconComponent({\n        animatedFocus,\n        color: animatedIconColor,\n        size: iconSize,\n      })\n    ) : (\n      <IconComponent\n        animatedFocus={animatedFocus}\n        color={animatedIconColor}\n        size={iconSize}\n      />\n    );\n  };\n\n  return (\n    <Animated.View style={containerStyle}>\n      <Animated.View style={contentContainerStyle}>\n        <View style={iconContainerStyle}>{renderIcon()}</View>\n      </Animated.View>\n      <Animated.View style={labelContainerStyle}>\n        <Text onLayout={handleTextLayout} style={labelStyle} numberOfLines={1}>\n          {label}\n        </Text>\n      </Animated.View>\n    </Animated.View>\n  );\n};\n\nconst BubbleTabBarItem = memo(BubbleTabBarItemComponent, isEqual);\n\nexport default BubbleTabBarItem;\n"]}