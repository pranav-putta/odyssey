{"version":3,"sources":["FlashyTabBar.tsx"],"names":["React","useMemo","memo","View","isEqual","FlashyTabBarItem","RawButton","DEFAULT_ITEM_ANIMATION_DURATION","DEFAULT_ITEM_ANIMATION_EASING","DEFAULT_ITEM_INNER_SPACE","DEFAULT_ITEM_OUTER_SPACE","DEFAULT_ITEM_ICON_SIZE","DEFAULT_ITEM_LAYOUT_DIRECTION","DEFAULT_ITEM_CONTAINER_WIDTH","withTransition","noop","styles","FlashyTabBarComponent","selectedIndex","tabs","duration","easing","itemInnerSpace","itemOuterSpace","itemContainerWidth","iconSize","isRTL","style","containerStyleOverride","onLongPress","animatedOnChange","animatedFocusValues","map","_","index","containerStyle","container","flexDirection","rawButtonStyle","flex","key","title","configs","FlashyTabBar","prevProps","nextProps"],"mappings":"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","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { View, StyleProp, ViewStyle } from 'react-native';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport FlashyTabBarItem from './item';\nimport RawButton from '../../components/rawButton';\nimport {\n  DEFAULT_ITEM_ANIMATION_DURATION,\n  DEFAULT_ITEM_ANIMATION_EASING,\n  DEFAULT_ITEM_INNER_SPACE,\n  DEFAULT_ITEM_OUTER_SPACE,\n  DEFAULT_ITEM_ICON_SIZE,\n  DEFAULT_ITEM_LAYOUT_DIRECTION,\n  DEFAULT_ITEM_CONTAINER_WIDTH,\n} from './constants';\nimport { withTransition } from '../../withTransition';\nimport { noop } from '../../utilities';\nimport type { TabBarViewProps } from '../../types';\nimport type { FlashyTabBarConfig, FlashyTabBarItemConfig } from './types';\nimport { styles } from './styles';\n\nconst FlashyTabBarComponent = ({\n  selectedIndex,\n  tabs,\n  duration = DEFAULT_ITEM_ANIMATION_DURATION,\n  easing = DEFAULT_ITEM_ANIMATION_EASING,\n  itemInnerSpace = DEFAULT_ITEM_INNER_SPACE,\n  itemOuterSpace = DEFAULT_ITEM_OUTER_SPACE,\n  itemContainerWidth = DEFAULT_ITEM_CONTAINER_WIDTH,\n  iconSize = DEFAULT_ITEM_ICON_SIZE,\n  isRTL = DEFAULT_ITEM_LAYOUT_DIRECTION,\n  style: containerStyleOverride,\n  onLongPress = noop,\n  animatedOnChange,\n}: TabBarViewProps<FlashyTabBarConfig, FlashyTabBarItemConfig>) => {\n  //#region variables\n  const animatedFocusValues = useMemo(\n    () =>\n      tabs.map((_, index) =>\n        withTransition({\n          index,\n          selectedIndex,\n          duration,\n          easing,\n        })\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tabs, duration, easing]\n  );\n  //#endregion\n\n  //#region styles\n  const containerStyle = useMemo<StyleProp<ViewStyle>>(\n    () => [\n      styles.container,\n      containerStyleOverride,\n      {\n        flexDirection: isRTL ? 'row-reverse' : 'row',\n      },\n    ],\n    [containerStyleOverride, isRTL]\n  );\n  const rawButtonStyle = useMemo(\n    () => (itemContainerWidth === 'fill' ? { flex: 1 } : {}),\n    [itemContainerWidth]\n  );\n  //#endregion\n\n  // render\n  return (\n    <View style={containerStyle}>\n      {tabs.map(({ key, title, ...configs }, index) => {\n        return (\n          <RawButton\n            key={key}\n            index={index}\n            selectedIndex={selectedIndex}\n            style={rawButtonStyle}\n            accessibilityLabel={title}\n            animatedOnChange={animatedOnChange}\n            onLongPress={onLongPress}\n          >\n            <FlashyTabBarItem\n              index={index}\n              animatedFocus={animatedFocusValues[index]}\n              label={title}\n              itemInnerSpace={itemInnerSpace}\n              itemOuterSpace={itemOuterSpace}\n              itemContainerWidth={itemContainerWidth}\n              iconSize={iconSize}\n              isRTL={isRTL}\n              {...configs}\n            />\n          </RawButton>\n        );\n      })}\n    </View>\n  );\n};\n\nconst FlashyTabBar = memo(FlashyTabBarComponent, (prevProps, nextProps) =>\n  isEqual(prevProps, nextProps)\n);\n\nexport default FlashyTabBar;\n"]}