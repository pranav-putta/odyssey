{"version":3,"sources":["FlashyTabBarItem.tsx"],"names":["AnimatedSvg","Animated","createAnimatedComponent","Svg","AnimatedCircle","Circle","add","interpolate","sub","max","divide","multiply","Extrapolate","FlashyTabBarItemComponent","animatedFocus","label","icon","labelStyle","labelStyleOverride","itemInnerSpace","itemOuterSpace","iconSize","indicator","isRTL","itemInnerVerticalSpace","itemInnerHorizontalSpace","itemOuterVerticalSpace","itemOuterHorizontalSpace","_itemInnerVerticalSpace","_itemInnerHorizontalSpace","_itemOuterVerticalSpace","_itemOuterHorizontalSpace","vertical","DEFAULT_ITEM_INNER_SPACE","horizontal","DEFAULT_ITEM_OUTER_SPACE","size","_indicatorSize","color","_indicatorColor","visible","_indicatorVisible","undefined","indicatorVisibility","indicatorColor","indicatorSize","DEFAULT_INDICATOR_VISIBILITY","DEFAULT_INDICATOR_COLOR","DEFAULT_INDICATOR_SIZE","labelWidth","labelHeight","containerHeight","containerWidth","outerContainerStyle","styles","outerContainer","paddingHorizontal","paddingVertical","containerStyle","container","width","height","labelContainerStyle","labelContainer","transform","translateY","inputRange","outputRange","extrapolate","CLAMP","labelMaskStyle","mask","x","y","rotate","iconContainerStyle","iconContainer","iconStyle","minHeight","minWidth","iconMaskStyle","animatedIndicatorSize","handleLabelLayout","nativeEvent","layout","requestAnimationFrame","setValue","renderIcon","IconComponent","component","root","left","top","FlashyTabBarItem","isEqual"],"mappings":"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","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { View, Text, ViewStyle, LayoutChangeEvent } from 'react-native';\nimport Animated from 'react-native-reanimated';\n// @ts-ignore ðŸ˜ž\nimport MaskedView from '@react-native-community/masked-view';\nimport { Svg, Circle, SvgProps, CircleProps } from 'react-native-svg';\nimport { useValues, transformOrigin, toRad } from 'react-native-redash';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport {\n  DEFAULT_ITEM_INNER_SPACE,\n  DEFAULT_ITEM_OUTER_SPACE,\n  DEFAULT_INDICATOR_VISIBILITY,\n  DEFAULT_INDICATOR_SIZE,\n  DEFAULT_INDICATOR_COLOR,\n} from '../constants';\nimport type { FlashyTabBarItemProps } from '../types';\nimport { styles } from './styles';\n\nconst AnimatedSvg = Animated.createAnimatedComponent(\n  Svg\n) as React.ComponentClass<Animated.AnimateProps<ViewStyle, SvgProps>, any>;\nconst AnimatedCircle = Animated.createAnimatedComponent(\n  Circle\n) as React.ComponentClass<\n  Animated.AnimateProps<ViewStyle, CircleProps & { style?: any }>,\n  any\n>;\n\nconst { add, interpolate, sub, max, divide, multiply, Extrapolate } = Animated;\n\nconst FlashyTabBarItemComponent = ({\n  animatedFocus,\n  label,\n  icon,\n  labelStyle: labelStyleOverride,\n  itemInnerSpace,\n  itemOuterSpace,\n  iconSize,\n  indicator,\n  isRTL,\n}: FlashyTabBarItemProps) => {\n  //#region extract props\n  const {\n    itemInnerVerticalSpace,\n    itemInnerHorizontalSpace,\n    itemOuterVerticalSpace,\n    itemOuterHorizontalSpace,\n  } = useMemo(() => {\n    let _itemInnerVerticalSpace,\n      _itemInnerHorizontalSpace,\n      _itemOuterVerticalSpace,\n      _itemOuterHorizontalSpace = 0;\n\n    if (typeof itemInnerSpace === 'number') {\n      _itemInnerVerticalSpace = itemInnerSpace;\n      _itemInnerHorizontalSpace = itemInnerSpace;\n    } else {\n      _itemInnerVerticalSpace =\n        itemInnerSpace?.vertical ?? DEFAULT_ITEM_INNER_SPACE;\n      _itemInnerHorizontalSpace =\n        itemInnerSpace?.horizontal ?? DEFAULT_ITEM_INNER_SPACE;\n    }\n    if (typeof itemOuterSpace === 'number') {\n      _itemOuterVerticalSpace = itemOuterSpace;\n      _itemOuterHorizontalSpace = itemOuterSpace;\n    } else {\n      _itemOuterVerticalSpace =\n        itemOuterSpace?.vertical ?? DEFAULT_ITEM_OUTER_SPACE;\n      _itemOuterHorizontalSpace =\n        itemOuterSpace?.horizontal ?? DEFAULT_ITEM_OUTER_SPACE;\n    }\n    return {\n      itemInnerVerticalSpace: _itemInnerVerticalSpace,\n      itemInnerHorizontalSpace: _itemInnerHorizontalSpace,\n      itemOuterVerticalSpace: _itemOuterVerticalSpace,\n      itemOuterHorizontalSpace: _itemOuterHorizontalSpace,\n    };\n  }, [itemInnerSpace, itemOuterSpace]);\n  const {\n    size: _indicatorSize,\n    color: _indicatorColor,\n    visible: _indicatorVisible,\n  } = indicator || {\n    size: undefined,\n    color: undefined,\n    visible: undefined,\n  };\n  const { indicatorVisibility, indicatorColor, indicatorSize } = useMemo(() => {\n    return {\n      indicatorVisibility: _indicatorVisible ?? DEFAULT_INDICATOR_VISIBILITY,\n      indicatorColor:\n        _indicatorColor ?? labelStyleOverride?.color ?? DEFAULT_INDICATOR_COLOR,\n      indicatorSize: _indicatorSize ?? DEFAULT_INDICATOR_SIZE,\n    };\n  }, [_indicatorVisible, _indicatorColor, _indicatorSize, labelStyleOverride]);\n  //#endregion\n\n  //#region variables\n  const [labelWidth, labelHeight] = useValues<number>(0, 0);\n  const containerHeight = useMemo(() => iconSize + itemInnerVerticalSpace * 2, [\n    iconSize,\n    itemInnerVerticalSpace,\n  ]);\n  const containerWidth = max(\n    add(labelWidth, itemInnerHorizontalSpace * 2),\n    iconSize + itemInnerHorizontalSpace * 2\n  );\n  //#endregion\n\n  //#region styles\n  const outerContainerStyle = [\n    styles.outerContainer,\n    {\n      paddingHorizontal: itemOuterHorizontalSpace,\n      paddingVertical: itemOuterVerticalSpace,\n    },\n  ];\n  const containerStyle = [\n    styles.container,\n    {\n      width: containerWidth,\n      height: containerHeight,\n    },\n  ];\n  // label styles\n  const labelContainerStyle = [\n    styles.labelContainer,\n    {\n      transform: [\n        {\n          translateY: interpolate(animatedFocus, {\n            inputRange: [0, 1],\n            outputRange: [\n              multiply(labelHeight, 0.5),\n              multiply(divide(labelHeight, 2), -1),\n            ],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        },\n      ] as Animated.AnimatedTransform,\n    },\n  ];\n  const labelStyle = [styles.label, labelStyleOverride];\n  const labelMaskStyle = [\n    styles.mask,\n    {\n      width: containerWidth,\n      height: multiply(labelHeight, 1.5),\n      transform: transformOrigin(\n        {\n          x: 0,\n          y: 0,\n        },\n        {\n          translateY: interpolate(animatedFocus, {\n            inputRange: [0.25, 1],\n            outputRange: [\n              0,\n              divide(sub(containerHeight, multiply(labelHeight, 1.5)), 2),\n            ],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n          rotate: interpolate(animatedFocus, {\n            inputRange: [0, 0.5],\n            outputRange: [toRad(0), toRad(isRTL ? -15 : 15)],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        }\n      ) as Animated.AnimatedTransform,\n    },\n  ];\n  // icon\n  const iconContainerStyle = [\n    styles.iconContainer,\n    {\n      transform: [\n        {\n          translateY: interpolate(animatedFocus, {\n            inputRange: [0, 1],\n            outputRange: [iconSize * -0.5, iconSize * -1.5],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        },\n      ] as Animated.AnimatedTransform,\n    },\n  ];\n  const iconStyle = [\n    styles.icon,\n    {\n      minHeight: iconSize,\n      minWidth: iconSize,\n    },\n  ];\n  const iconMaskStyle = [\n    styles.mask,\n    {\n      width: containerWidth,\n      height: iconSize,\n      transform: transformOrigin(\n        {\n          x: 0,\n          y: 0,\n        },\n        {\n          translateY: interpolate(animatedFocus, {\n            inputRange: [0, 1],\n            outputRange: [itemInnerVerticalSpace, iconSize * -1.5],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n          rotate: interpolate(animatedFocus, {\n            inputRange: [0, 0.5],\n            outputRange: [0, toRad(isRTL ? -15 : 15)],\n            extrapolate: Extrapolate.CLAMP,\n          }),\n        }\n      ) as Animated.AnimatedTransform,\n    },\n  ];\n  // indicator\n  const animatedIndicatorSize = interpolate(animatedFocus, {\n    inputRange: [0.5, 1],\n    outputRange: [0, indicatorSize / 2],\n    extrapolate: Extrapolate.CLAMP,\n  });\n  //#endregion\n\n  // callbacks\n  const handleLabelLayout = ({\n    nativeEvent: {\n      layout: { height, width },\n    },\n  }: LayoutChangeEvent) =>\n    requestAnimationFrame(() => {\n      labelWidth.setValue(width);\n      labelHeight.setValue(height);\n    });\n\n  // render\n  const renderIcon = () => {\n    const IconComponent: any = icon.component;\n    return typeof IconComponent === 'function' ? (\n      IconComponent({\n        animatedFocus,\n        color: icon.color,\n        size: iconSize,\n      })\n    ) : (\n      <IconComponent\n        animatedFocus={animatedFocus}\n        color={icon.color}\n        size={iconSize}\n      />\n    );\n  };\n\n  return (\n    <Animated.View style={outerContainerStyle}>\n      <Animated.View style={containerStyle}>\n        <MaskedView\n          style={styles.root}\n          maskElement={<Animated.View style={iconMaskStyle} />}\n        >\n          <Animated.View pointerEvents=\"none\" style={iconContainerStyle}>\n            <View style={iconStyle}>{renderIcon()}</View>\n          </Animated.View>\n        </MaskedView>\n        <MaskedView\n          style={styles.root}\n          maskElement={<Animated.View style={labelMaskStyle} />}\n        >\n          <Animated.View style={labelContainerStyle}>\n            <Text\n              numberOfLines={1}\n              style={labelStyle}\n              onLayout={handleLabelLayout}\n            >\n              {label}\n            </Text>\n          </Animated.View>\n        </MaskedView>\n        {indicatorVisibility && (\n          <AnimatedSvg\n            style={[\n              styles.root,\n              {\n                left: sub(divide(containerWidth, 2), indicatorSize / 2),\n                top: sub(containerHeight, indicatorSize),\n              },\n            ]}\n            width={indicatorSize}\n            height={indicatorSize}\n          >\n            <AnimatedCircle\n              r={animatedIndicatorSize}\n              translateY={indicatorSize / 2}\n              translateX={indicatorSize / 2}\n              fill={indicatorColor}\n            />\n          </AnimatedSvg>\n        )}\n      </Animated.View>\n    </Animated.View>\n  );\n};\n\nconst FlashyTabBarItem = memo(FlashyTabBarItemComponent, isEqual);\n\nexport default FlashyTabBarItem;\n"]}