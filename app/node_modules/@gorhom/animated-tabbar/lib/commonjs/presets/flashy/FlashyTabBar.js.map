{"version":3,"sources":["FlashyTabBar.tsx"],"names":["FlashyTabBarComponent","selectedIndex","tabs","duration","DEFAULT_ITEM_ANIMATION_DURATION","easing","DEFAULT_ITEM_ANIMATION_EASING","itemInnerSpace","DEFAULT_ITEM_INNER_SPACE","itemOuterSpace","DEFAULT_ITEM_OUTER_SPACE","itemContainerWidth","DEFAULT_ITEM_CONTAINER_WIDTH","iconSize","DEFAULT_ITEM_ICON_SIZE","isRTL","DEFAULT_ITEM_LAYOUT_DIRECTION","style","containerStyleOverride","onLongPress","noop","animatedOnChange","animatedFocusValues","map","_","index","containerStyle","styles","container","flexDirection","rawButtonStyle","flex","key","title","configs","FlashyTabBar","prevProps","nextProps"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AASA;;AACA;;AAGA;;;;;;;;;;;;;;AAEA,MAAMA,qBAAqB,GAAG,CAAC;AAC7BC,EAAAA,aAD6B;AAE7BC,EAAAA,IAF6B;AAG7BC,EAAAA,QAAQ,GAAGC,0CAHkB;AAI7BC,EAAAA,MAAM,GAAGC,wCAJoB;AAK7BC,EAAAA,cAAc,GAAGC,mCALY;AAM7BC,EAAAA,cAAc,GAAGC,mCANY;AAO7BC,EAAAA,kBAAkB,GAAGC,uCAPQ;AAQ7BC,EAAAA,QAAQ,GAAGC,iCARkB;AAS7BC,EAAAA,KAAK,GAAGC,wCATqB;AAU7BC,EAAAA,KAAK,EAAEC,sBAVsB;AAW7BC,EAAAA,WAAW,GAAGC,eAXe;AAY7BC,EAAAA;AAZ6B,CAAD,KAaqC;AACjE;AACA,QAAMC,mBAAmB,GAAG,oBAC1B,MACEpB,IAAI,CAACqB,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KACP,oCAAe;AACbA,IAAAA,KADa;AAEbxB,IAAAA,aAFa;AAGbE,IAAAA,QAHa;AAIbE,IAAAA;AAJa,GAAf,CADF,CAFwB,EAU1B;AACA,GAACH,IAAD,EAAOC,QAAP,EAAiBE,MAAjB,CAX0B,CAA5B,CAFiE,CAejE;AAEA;;AACA,QAAMqB,cAAc,GAAG,oBACrB,MAAM,CACJC,eAAOC,SADH,EAEJV,sBAFI,EAGJ;AACEW,IAAAA,aAAa,EAAEd,KAAK,GAAG,aAAH,GAAmB;AADzC,GAHI,CADe,EAQrB,CAACG,sBAAD,EAAyBH,KAAzB,CARqB,CAAvB;AAUA,QAAMe,cAAc,GAAG,oBACrB,MAAOnB,kBAAkB,KAAK,MAAvB,GAAgC;AAAEoB,IAAAA,IAAI,EAAE;AAAR,GAAhC,GAA8C,EADhC,EAErB,CAACpB,kBAAD,CAFqB,CAAvB,CA5BiE,CAgCjE;AAEA;;AACA,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEe;AAAb,KACGxB,IAAI,CAACqB,GAAL,CAAS,OAA6BE,KAA7B,KAAuC;AAAA,QAAtC;AAAEO,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAsC;AAAA,QAArBC,OAAqB;;AAC/C,wBACE,6BAAC,kBAAD;AACE,MAAA,GAAG,EAAEF,GADP;AAEE,MAAA,KAAK,EAAEP,KAFT;AAGE,MAAA,aAAa,EAAExB,aAHjB;AAIE,MAAA,KAAK,EAAE6B,cAJT;AAKE,MAAA,kBAAkB,EAAEG,KALtB;AAME,MAAA,gBAAgB,EAAEZ,gBANpB;AAOE,MAAA,WAAW,EAAEF;AAPf,oBASE,6BAAC,aAAD;AACE,MAAA,KAAK,EAAEM,KADT;AAEE,MAAA,aAAa,EAAEH,mBAAmB,CAACG,KAAD,CAFpC;AAGE,MAAA,KAAK,EAAEQ,KAHT;AAIE,MAAA,cAAc,EAAE1B,cAJlB;AAKE,MAAA,cAAc,EAAEE,cALlB;AAME,MAAA,kBAAkB,EAAEE,kBANtB;AAOE,MAAA,QAAQ,EAAEE,QAPZ;AAQE,MAAA,KAAK,EAAEE;AART,OASMmB,OATN,EATF,CADF;AAuBD,GAxBA,CADH,CADF;AA6BD,CA7ED;;AA+EA,MAAMC,YAAY,gBAAG,iBAAKnC,qBAAL,EAA4B,CAACoC,SAAD,EAAYC,SAAZ,KAC/C,qBAAQD,SAAR,EAAmBC,SAAnB,CADmB,CAArB;eAIeF,Y","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { View, StyleProp, ViewStyle } from 'react-native';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport FlashyTabBarItem from './item';\nimport RawButton from '../../components/rawButton';\nimport {\n  DEFAULT_ITEM_ANIMATION_DURATION,\n  DEFAULT_ITEM_ANIMATION_EASING,\n  DEFAULT_ITEM_INNER_SPACE,\n  DEFAULT_ITEM_OUTER_SPACE,\n  DEFAULT_ITEM_ICON_SIZE,\n  DEFAULT_ITEM_LAYOUT_DIRECTION,\n  DEFAULT_ITEM_CONTAINER_WIDTH,\n} from './constants';\nimport { withTransition } from '../../withTransition';\nimport { noop } from '../../utilities';\nimport type { TabBarViewProps } from '../../types';\nimport type { FlashyTabBarConfig, FlashyTabBarItemConfig } from './types';\nimport { styles } from './styles';\n\nconst FlashyTabBarComponent = ({\n  selectedIndex,\n  tabs,\n  duration = DEFAULT_ITEM_ANIMATION_DURATION,\n  easing = DEFAULT_ITEM_ANIMATION_EASING,\n  itemInnerSpace = DEFAULT_ITEM_INNER_SPACE,\n  itemOuterSpace = DEFAULT_ITEM_OUTER_SPACE,\n  itemContainerWidth = DEFAULT_ITEM_CONTAINER_WIDTH,\n  iconSize = DEFAULT_ITEM_ICON_SIZE,\n  isRTL = DEFAULT_ITEM_LAYOUT_DIRECTION,\n  style: containerStyleOverride,\n  onLongPress = noop,\n  animatedOnChange,\n}: TabBarViewProps<FlashyTabBarConfig, FlashyTabBarItemConfig>) => {\n  //#region variables\n  const animatedFocusValues = useMemo(\n    () =>\n      tabs.map((_, index) =>\n        withTransition({\n          index,\n          selectedIndex,\n          duration,\n          easing,\n        })\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tabs, duration, easing]\n  );\n  //#endregion\n\n  //#region styles\n  const containerStyle = useMemo<StyleProp<ViewStyle>>(\n    () => [\n      styles.container,\n      containerStyleOverride,\n      {\n        flexDirection: isRTL ? 'row-reverse' : 'row',\n      },\n    ],\n    [containerStyleOverride, isRTL]\n  );\n  const rawButtonStyle = useMemo(\n    () => (itemContainerWidth === 'fill' ? { flex: 1 } : {}),\n    [itemContainerWidth]\n  );\n  //#endregion\n\n  // render\n  return (\n    <View style={containerStyle}>\n      {tabs.map(({ key, title, ...configs }, index) => {\n        return (\n          <RawButton\n            key={key}\n            index={index}\n            selectedIndex={selectedIndex}\n            style={rawButtonStyle}\n            accessibilityLabel={title}\n            animatedOnChange={animatedOnChange}\n            onLongPress={onLongPress}\n          >\n            <FlashyTabBarItem\n              index={index}\n              animatedFocus={animatedFocusValues[index]}\n              label={title}\n              itemInnerSpace={itemInnerSpace}\n              itemOuterSpace={itemOuterSpace}\n              itemContainerWidth={itemContainerWidth}\n              iconSize={iconSize}\n              isRTL={isRTL}\n              {...configs}\n            />\n          </RawButton>\n        );\n      })}\n    </View>\n  );\n};\n\nconst FlashyTabBar = memo(FlashyTabBarComponent, (prevProps, nextProps) =>\n  isEqual(prevProps, nextProps)\n);\n\nexport default FlashyTabBar;\n"]}